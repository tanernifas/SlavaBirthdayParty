// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã
const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

const gravity = 0.5;
const jumpStrength = -12;
const obstacleSpeed = 6;
const spawnInterval = 1000; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ—è–≤–ª–µ–Ω–∏—è –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö)

// –ò–≥—Ä–æ–∫
const player = {
  x: 100,
  y: canvas.height - 300, // –ü–µ—Ä–µ–º–µ—Å—Ç–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ –≤—ã—à–µ
  width: 50,
  height: 50,
  dy: 0,
  isJumping: false,
};

// –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
const playerImage = new Image();
playerImage.src = 'player.png'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

// –ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è
const obstacles = [];

// –°—á—ë—Ç—á–∏–∫ –æ—á–∫–æ–≤
let score = 0;

// –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤
let leaderboard = JSON.parse(localStorage.getItem('leaderboard')) || [];
const MAX_LEADERBOARD_ENTRIES = 5; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤

// –ö–Ω–æ–ø–∫–∞ –ø—Ä—ã–∂–∫–∞
const jumpButton = document.getElementById('jumpButton');

// –ú–µ–Ω—é
const menu = document.getElementById('menu');
const startButton = document.getElementById('startButton');
const settingsButton = document.getElementById('settingsButton');
const exitButton = document.getElementById('exitButton');
const highScoreDisplay = document.getElementById('highScoreDisplay');
const leaderboardList = document.getElementById('leaderboard');

let isGameRunning = false;

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ–Ω–∞
const backgroundImage = new Image();
backgroundImage.src = 'background.png'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
let backgroundX = 0;

// Telegram Bot API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const TELEGRAM_BOT_TOKEN = '7976307147:AAGc20uHZOJCnQ_0Mu-0-ZXuuvywdHeC9UE'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
const TELEGRAM_CHAT_ID = '-1002491968585'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ —á–∞—Ç–∞

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
function sendToTelegram(message) {
  const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
  const data = {
    chat_id: TELEGRAM_CHAT_ID,
    text: message,
  };

  fetch(url, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(data),
  })
    .then((response) => {
      if (!response.ok) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', response.statusText);
      }
    })
    .catch((error) => {
      console.error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–ª–∞–≤–∏—à –∏ –∫–Ω–æ–ø–∫–∏
function handleJump() {
  if (!player.isJumping) {
    player.dy = jumpStrength;
    player.isJumping = true;
  }
}

document.addEventListener('keydown', (e) => {
  if (e.code === 'Space') handleJump();
});

jumpButton.addEventListener('touchstart', handleJump); // –î–ª—è —Å–µ–Ω—Å–æ—Ä–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
jumpButton.addEventListener('mousedown', handleJump); // –î–ª—è –º—ã—à–∏

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∏–≥—Ä–æ–∫–∞
function drawPlayer() {
  ctx.drawImage(playerImage, player.x, player.y, player.width, player.height);
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ (–¥–ª—è –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π)
function drawRect(obj) {
  ctx.fillStyle = obj.color;
  ctx.fillRect(obj.x, obj.y, obj.width, obj.height);
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ñ–æ–Ω–∞
function drawBackground() {
  ctx.drawImage(backgroundImage, backgroundX, 0, canvas.width, canvas.height);
  ctx.drawImage(backgroundImage, backgroundX + canvas.width, 0, canvas.width, canvas.height);

  // –î–≤–∏–∂–µ–Ω–∏–µ —Ñ–æ–Ω–∞
  backgroundX -= 2; // –°–∫–æ—Ä–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è —Ñ–æ–Ω–∞
  if (backgroundX <= -canvas.width) {
    backgroundX = 0; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–Ω –≤ –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä–æ–∫–∞
function updatePlayer() {
  // –ì—Ä–∞–≤–∏—Ç–∞—Ü–∏—è
  player.dy += gravity;
  player.y += player.dy;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å –∑–µ–º–ª—ë–π
  const groundLevel = canvas.height - 215; // –£—Ä–æ–≤–µ–Ω—å –∑–µ–º–ª–∏ —Ç–µ–ø–µ—Ä—å –≤—ã—à–µ
  if (player.y + player.height >= groundLevel) {
    player.y = groundLevel - player.height;
    player.isJumping = false;
  }

  // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
  if (player.y < 0) {
    player.y = 0;
    player.dy = 0;
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è
function spawnObstacle() {
  const width = Math.random() * 50 + 20; // –°–ª—É—á–∞–π–Ω–∞—è —à–∏—Ä–∏–Ω–∞
  const height = Math.random() * 50 + 20; // –°–ª—É—á–∞–π–Ω–∞—è –≤—ã—Å–æ—Ç–∞
  const x = canvas.width;
  const y = canvas.height - 215 - height; // –ü–æ–¥–Ω—è–ª–∏ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –≤—ã—à–µ

  obstacles.push({ x, y, width, height, color: 'brown' });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π
function updateObstacles() {
  for (let i = obstacles.length - 1; i >= 0; i--) {
    const obstacle = obstacles[i];

    // –î–≤–∏–∂–µ–Ω–∏–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è
    obstacle.x -= obstacleSpeed;

    // –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –æ–Ω–æ –≤—ã—à–ª–æ –∑–∞ —ç–∫—Ä–∞–Ω
    if (obstacle.x + obstacle.width < 0) {
      obstacles.splice(i, 1);
      score++; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –∑–∞ –ø—Ä–µ–æ–¥–æ–ª—ë–Ω–Ω–æ–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å –∏–≥—Ä–æ–∫–æ–º
    if (
      player.x < obstacle.x + obstacle.width &&
      player.x + player.width > obstacle.x &&
      player.y + player.height > obstacle.y
    ) {
      gameOver();
    }
  }
}

// –ö–æ–Ω–µ—Ü –∏–≥—Ä—ã
function gameOver() {
  isGameRunning = false; // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä—É
  clearInterval(obstacleSpawnTimer); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π
  obstacles.length = 0; // –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π
  menu.style.display = 'block'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
  alert(`–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –í–∞—à —Å—á—ë—Ç: ${score}`); // –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–æ–Ω—Ü–µ –∏–≥—Ä—ã

  // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤
  leaderboard.push(score);
  leaderboard.sort((a, b) => b - a); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é
  leaderboard = leaderboard.slice(0, MAX_LEADERBOARD_ENTRIES); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
  localStorage.setItem('leaderboard', JSON.stringify(leaderboard)); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage

  updateLeaderboardDisplay(); // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∫–æ—Ä–¥ –≤ Telegram
  const message = `üéÆ –ù–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥: ${score}! üéâ\n–¢–æ–ø-5 –ª–∏–¥–µ—Ä–æ–≤:\n${leaderboard.join('\n')}`;
  sendToTelegram(message);

  resetGame(); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
}

// –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
function resetGame() {
  player.x = 100;
  player.y = canvas.height - 365; // –ü–µ—Ä–µ–º–µ—Å—Ç–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ –≤—ã—à–µ
  player.dy = 0;
  player.isJumping = false;

  score = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á—ë—Ç
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—á—ë—Ç–∞
function drawScore() {
  ctx.fillStyle = 'black';
  ctx.font = '24px Arial';
  ctx.fillText(`–°—á—ë—Ç: ${score}`, 20, 30);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
function updateLeaderboardDisplay() {
  leaderboardList.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
  leaderboard.forEach((score, index) => {
    const listItem = document.createElement('li');
    listItem.textContent = `${index + 1}. ${score}`;
    leaderboardList.appendChild(listItem);
  });
}

// –û—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
function gameLoop() {
  if (!isGameRunning) return;

  ctx.clearRect(0, 0, canvas.width, canvas.height);

  // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ–Ω–∞
  drawBackground();

  // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
  drawPlayer();
  updatePlayer();

  // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π
  obstacles.forEach(drawRect);
  updateObstacles();

  // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—á—ë—Ç–∞
  drawScore();

  requestAnimationFrame(gameLoop);
}

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
function startGame() {
  isGameRunning = true;
  menu.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
  obstacleSpawnTimer = setInterval(spawnObstacle, spawnInterval); // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π
  gameLoop();
}

// –õ–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
startButton.addEventListener('click', startGame);

settingsButton.addEventListener('click', () => {
  alert('–ó–¥–µ—Å—å –º–æ–≥–ª–∏ –±—ã –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã.');
});

exitButton.addEventListener('click', () => {
  if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?')) {
    window.close(); // –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –≤–∫–ª–∞–¥–∫—É
  }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
updateLeaderboardDisplay();